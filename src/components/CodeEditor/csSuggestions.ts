import * as monaco from "monaco-editor";

export const getCSharpSuggestions = (
  range: monaco.IRange,
  monacoInstance: typeof monaco
): monaco.languages.CompletionItem[] => {
  return [
    // C# Keywords
    { label: 'if', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: if statement', insertText: 'if', range },
    { label: 'else', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: else statement', insertText: 'else', range },
    { label: 'for', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: for loop', insertText: 'for', range },
    { label: 'while', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: while loop', insertText: 'while', range },
    { label: 'do', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: do-while loop', insertText: 'do', range },
    { label: 'foreach', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: foreach loop', insertText: 'foreach', range },
    { label: 'switch', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: switch statement', insertText: 'switch', range },
    { label: 'case', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: case statement', insertText: 'case', range },
    { label: 'break', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: break statement', insertText: 'break', range },
    { label: 'continue', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: continue statement', insertText: 'continue', range },
    { label: 'return', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: return statement', insertText: 'return', range },
    { label: 'class', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: class definition', insertText: 'class', range },
    { label: 'struct', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: struct definition', insertText: 'struct', range },
    { label: 'public', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: public modifier', insertText: 'public', range },
    { label: 'private', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: private modifier', insertText: 'private', range },
    { label: 'protected', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: protected modifier', insertText: 'protected', range },
    { label: 'internal', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: internal modifier', insertText: 'internal', range },
    { label: 'static', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: static modifier', insertText: 'static', range },
    { label: 'const', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: const modifier', insertText: 'const', range },
    { label: 'readonly', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: readonly modifier', insertText: 'readonly', range },
    { label: 'virtual', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: virtual modifier', insertText: 'virtual', range },
    { label: 'override', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: override modifier', insertText: 'override', range },
    { label: 'abstract', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: abstract modifier', insertText: 'abstract', range },
    { label: 'sealed', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: sealed modifier', insertText: 'sealed', range },
    { label: 'this', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: this reference', insertText: 'this', range },
    { label: 'base', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: base reference', insertText: 'base', range },
    { label: 'new', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: new operator', insertText: 'new', range },
    { label: 'true', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: boolean true', insertText: 'true', range },
    { label: 'false', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: boolean false', insertText: 'false', range },
    { label: 'null', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: null reference', insertText: 'null', range },
    { label: 'void', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: void type', insertText: 'void', range },
    { label: 'int', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: int type', insertText: 'int', range },
    { label: 'long', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: long type', insertText: 'long', range },
    { label: 'short', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: short type', insertText: 'short', range },
    { label: 'byte', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: byte type', insertText: 'byte', range },
    { label: 'char', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: char type', insertText: 'char', range },
    { label: 'float', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: float type', insertText: 'float', range },
    { label: 'double', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: double type', insertText: 'double', range },
    { label: 'decimal', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: decimal type', insertText: 'decimal', range },
    { label: 'bool', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: bool type', insertText: 'bool', range },
    { label: 'string', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: string type', insertText: 'string', range },
    { label: 'object', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: object type', insertText: 'object', range },
    { label: 'var', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: var type inference', insertText: 'var', range },
    { label: 'try', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: try block', insertText: 'try', range },
    { label: 'catch', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: catch block', insertText: 'catch', range },
    { label: 'finally', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: finally block', insertText: 'finally', range },
    { label: 'throw', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: throw exception', insertText: 'throw', range },
    { label: 'async', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: async modifier', insertText: 'async', range },
    { label: 'await', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: await operator', insertText: 'await', range },
    { label: 'namespace', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: namespace', insertText: 'namespace', range },
    { label: 'using', kind: monacoInstance.languages.CompletionItemKind.Keyword, detail: 'C# keyword: using directive', insertText: 'using', range },
    
    // C# Common Namespaces
    { label: 'System', kind: monacoInstance.languages.CompletionItemKind.Module, detail: 'C# namespace: System', insertText: 'System', range },
    { label: 'System.Collections', kind: monacoInstance.languages.CompletionItemKind.Module, detail: 'C# namespace: Collections', insertText: 'System.Collections', range },
    { label: 'System.Collections.Generic', kind: monacoInstance.languages.CompletionItemKind.Module, detail: 'C# namespace: Generic Collections', insertText: 'System.Collections.Generic', range },
    { label: 'System.Linq', kind: monacoInstance.languages.CompletionItemKind.Module, detail: 'C# namespace: LINQ', insertText: 'System.Linq', range },
    { label: 'System.Text', kind: monacoInstance.languages.CompletionItemKind.Module, detail: 'C# namespace: Text', insertText: 'System.Text', range },
    { label: 'System.IO', kind: monacoInstance.languages.CompletionItemKind.Module, detail: 'C# namespace: Input/Output', insertText: 'System.IO', range },
    { label: 'System.Threading.Tasks', kind: monacoInstance.languages.CompletionItemKind.Module, detail: 'C# namespace: Tasks', insertText: 'System.Threading.Tasks', range },
    
    // C# Collections
    { label: 'List', kind: monacoInstance.languages.CompletionItemKind.Class, detail: 'C#: List<T> collection', insertText: 'List', range },
    { label: 'Dictionary', kind: monacoInstance.languages.CompletionItemKind.Class, detail: 'C#: Dictionary<TKey, TValue> collection', insertText: 'Dictionary', range },
    { label: 'HashSet', kind: monacoInstance.languages.CompletionItemKind.Class, detail: 'C#: HashSet<T> collection', insertText: 'HashSet', range },
    { label: 'Queue', kind: monacoInstance.languages.CompletionItemKind.Class, detail: 'C#: Queue<T> collection', insertText: 'Queue', range },
    { label: 'Stack', kind: monacoInstance.languages.CompletionItemKind.Class, detail: 'C#: Stack<T> collection', insertText: 'Stack', range },
    { label: 'Array', kind: monacoInstance.languages.CompletionItemKind.Class, detail: 'C#: Array collection', insertText: 'Array', range },
    
    // C# Common Methods
    { label: 'Console.WriteLine', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Write to console with newline', insertText: 'Console.WriteLine', range },
    { label: 'Console.Write', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Write to console', insertText: 'Console.Write', range },
    { label: 'Console.ReadLine', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Read line from console', insertText: 'Console.ReadLine', range },
    { label: 'Console.ReadKey', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Read key from console', insertText: 'Console.ReadKey', range },
    { label: 'ToString', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Convert to string', insertText: 'ToString', range },
    { label: 'Equals', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Check equality', insertText: 'Equals', range },
    { label: 'GetHashCode', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Get hash code', insertText: 'GetHashCode', range },
    { label: 'Length', kind: monacoInstance.languages.CompletionItemKind.Property, detail: 'C#: Get length/size', insertText: 'Length', range },
    { label: 'Count', kind: monacoInstance.languages.CompletionItemKind.Property, detail: 'C#: Get count of elements', insertText: 'Count', range },
    { label: 'Add', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Add element to collection', insertText: 'Add', range },
    { label: 'Remove', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Remove element from collection', insertText: 'Remove', range },
    { label: 'Contains', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Check if contains element', insertText: 'Contains', range },
    { label: 'Clear', kind: monacoInstance.languages.CompletionItemKind.Method, detail: 'C#: Clear collection', insertText: 'Clear', range },
  ];
};

